{"version":3,"sources":["news/redux/actions.js","news/component/ComponentNews.js","news/redux/reducer.js","news/redux/sagas.js","news/index.js","news/redux/module.js"],"names":["GetNews","getNews","items","type","payload","Link","title","url","className","href","List","map","item","index","key","ConnectedHackerNews","connect","state","hackerNews","dispatch","getNewsByNum","num","useState","nums","setNums","length","value","onChange","e","target","onClick","newsReducer","action","produce","draft","console","log","newsSaga","fetchNews","call","takeEvery","undefined","fetch","idsJson","json","idsarr","effects","getNewsEffects","all","storiesJson","stoj","stories","put","topNum","slice","id","push","args","DynamicHackerNews","modules","reducerMap","sagas"],"mappings":"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","file":"static/js/5.ef23a4b8.chunk.js","sourcesContent":["export const GetNews = \"GET_NEWS\";\r\nexport const getNews = (items) => {\r\n    return {\r\n        type: GetNews,\r\n        payload: {\r\n            items,\r\n        },\r\n    }\r\n}","import {connect} from 'react-redux';\r\nimport {GetNews} from '../redux/actions'\r\nimport React, {useState} from 'react';\r\n\r\nconst Link = ({ title, url }) => {\r\n    return (\r\n        <div className=\"news-link\">\r\n            <a href={url}>{title}</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst List = ({ items }) => {\r\n    return items.map((item, index) => <Link key={index} {...item} />);\r\n};\r\n\r\nconst HackerNews = ({ items,  getNewsByNum}) => {\r\n    const [nums, setNums] = useState(5);\r\n    if (items.length === 0) {\r\n        return <div className=\"weather-root widget\">Loading News...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"news-root widget\">\r\n            <h2>Hacker News - Top {nums}</h2>\r\n            <input value={nums} onChange={e => setNums(e.target.value)}></input>\r\n            <button onClick={() => getNewsByNum(nums)}>Update</button>\r\n            <List items={items} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        items: state.hackerNews ? state.hackerNews.items : [],\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getNewsByNum: (num) => {\r\n            dispatch({\r\n                type: GetNews + \"M\",\r\n                num: num\r\n            })\r\n        }\r\n    } \r\n}\r\n\r\nexport const ConnectedHackerNews = connect(mapStateToProps, mapDispatchToProps)(HackerNews);","import {GetNews} from './actions';\r\nimport produce from \"immer\";\r\nexport const newsReducer = (state = {items: []}, action) => {\r\n    return produce(state, draft => {\r\n        switch (action.type) {\r\n            case GetNews: {\r\n                console.log(action)\r\n                draft.items = action.payload.items;\r\n                break;\r\n            }\r\n            default: {\r\n                return state;\r\n            }\r\n        }\r\n    })\r\n} ","import {getNews, GetNews} from './actions';\r\n\r\nimport { call, put, takeEvery, all } from 'redux-saga/effects';\r\nimport { get } from 'http';\r\n\r\nexport function* newsSaga() {\r\n    yield call(fetchNews);\r\n    //可以运行成功\r\n    yield takeEvery(GetNews + \"M\", getNewsByNum,undefined)\r\n    // while(true) {\r\n    //     可以成功运行\r\n    //     const action = yield take(GetNews + \"M\");\r\n    //     yield call(fetchNews, action.num)\r\n    // }\r\n}\r\n\r\nfunction* fetchNews(num = 5) {\r\n    const url = \"https://hacker-news.firebaseio.com/v0/topstories.json\";\r\n    const idsJson = yield call(fetch, url);\r\n    const idsarr = yield call([idsJson, idsJson.json])\r\n    console.log(\"idsJson: \", idsarr)\r\n\r\n    //单个成功\r\n    // const store = yield call(fetch, \"https://hacker-news.firebaseio.com/v0/item/21719575.json\");\r\n    // console.log(store)\r\n    // console.log(call([store, store.json]))\r\n\r\n\r\n    const effects = getNewsEffects(idsarr, num);\r\n    const storiesJson = yield all(effects)\r\n    const stories = yield all(storiesJson.map(stoj => call([stoj, stoj.json])))\r\n    yield put(getNews(stories));\r\n\r\n}\r\n\r\nconst fetchJson = url => {\r\n    fetch(url).then(res => {\r\n        console.log(res.json())\r\n        return res.json();\r\n    })\r\n}\r\n\r\nconst getNewsEffects= (idsJson, num) => {\r\n    \r\n    const topNum = idsJson.slice(0, num);\r\n    const effects = [];\r\n    for (const id of topNum) {\r\n        const url = \"https://hacker-news.firebaseio.com/v0/item/\" + id + \".json\"\r\n        effects.push(call(fetch, \"https://hacker-news.firebaseio.com/v0/item/\" + id + \".json\"))\r\n    }\r\n\r\n    return effects;\r\n}\r\n\r\n/**\r\n * 根据num 获取数据，可以使用\r\n * @param {*} num \r\n */\r\nfunction* getNewsByNum(num = 20,...args) {\r\n    num = args[args.length-1].num;\r\n    // console.log(args[args.length-1])//获取action,takeEvery 默认的把action追加到参数的末尾。\r\n    // console.log(num)\r\n    const url = \"https://hacker-news.firebaseio.com/v0/topstories.json\";\r\n    const idsJson = yield call(fetch, url);\r\n    const idsarr = yield call([idsJson, idsJson.json])\r\n    const effects = getNewsEffects(idsarr, num);\r\n    const storiesJson = yield all(effects)\r\n    const stories = yield all(storiesJson.map(stoj => call([stoj, stoj.json])))\r\n    console.log(stories);\r\n    yield put(getNews(stories));\r\n}","import {ConnectedHackerNews} from './component/ComponentNews';\r\nimport {getNewsModule} from './redux/module';\r\nimport { DynamicModuleLoader } from \"redux-dynamic-modules-react\";\r\nimport React from 'react';\r\n\r\nexport default function DynamicHackerNews() {\r\n    return (\r\n        // define the module dependency for the HackerNews component\r\n        // DynamicModuleLoader is a HOC provided by redux-dynamic-modules-react\r\n        // It loads the module on ComponentDidMount and unloads on ComponentDidUnmount\r\n        <DynamicModuleLoader modules={[getNewsModule()]}>\r\n            {/* \r\n                This is the Hacker News component that is connected to the redux store,\r\n                the connected component need not know anything about modules. \r\n            */}\r\n            <ConnectedHackerNews />\r\n        </DynamicModuleLoader>\r\n    );\r\n}","import {newsReducer} from './reducer';\r\nimport {newsSaga} from './sagas'\r\n\r\nexport function getNewsModule() {\r\n    return {\r\n        id: 'news',\r\n        reducerMap: {\r\n            hackerNews: newsReducer,\r\n        },\r\n        sagas: [newsSaga]\r\n    }\r\n}"],"sourceRoot":""}